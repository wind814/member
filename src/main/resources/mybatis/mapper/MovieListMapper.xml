<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wind.member.dao.MovieListMapper" >
  <resultMap id="BaseResultMap" type="com.wind.member.entity.MovieList" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="star_id" property="starId" jdbcType="BIGINT" />
    <result column="file_size" property="fileSize" jdbcType="VARCHAR" />
    <result column="name_code" property="nameCode" jdbcType="VARCHAR" />
    <result column="high_definition" property="highDefinition" jdbcType="BIT" />
    <result column="favorite" property="favorite" jdbcType="BIT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="volume" property="volume" jdbcType="VARCHAR" />
    <result column="is_chinese" property="isChinese" jdbcType="BIT" />
    <result column="create_at" property="createAt" jdbcType="TIMESTAMP" />
    <result column="update_at" property="updateAt" jdbcType="TIMESTAMP" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from movie_list
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wind.member.entity.MovieList" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into movie_list (star_id, file_size, name_code, 
      high_definition, favorite, address, 
      is_chinese, create_at, update_at,volume
      )
    values (#{starId,jdbcType=BIGINT}, #{fileSize,jdbcType=VARCHAR}, #{nameCode,jdbcType=VARCHAR}, 
      #{highDefinition,jdbcType=BIT}, #{favorite,jdbcType=BIT}, #{address,jdbcType=VARCHAR}, 
      #{isChinese,jdbcType=BIT}, #{createAt,jdbcType=TIMESTAMP}, #{updateAt,jdbcType=TIMESTAMP},#{volume,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.wind.member.entity.MovieList" >
    update movie_list
    set star_id = #{starId,jdbcType=BIGINT},
      file_size = #{fileSize,jdbcType=VARCHAR},
      name_code = #{nameCode,jdbcType=VARCHAR},
      high_definition = #{highDefinition,jdbcType=BIT},
      favorite = #{favorite,jdbcType=BIT},
      address = #{address,jdbcType=VARCHAR},
      is_chinese = #{isChinese,jdbcType=BIT},
      create_at = #{createAt,jdbcType=TIMESTAMP},
      update_at = #{updateAt,jdbcType=TIMESTAMP},
      volume = #{volume,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select id, star_id, file_size, name_code, high_definition, favorite, address, is_chinese, 
    create_at, update_at,volume
    from movie_list
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, star_id, file_size, name_code, high_definition, favorite, address, is_chinese, 
    create_at, update_at,volume
    from movie_list
  </select>

  <select id="findByNameAndStarId" resultMap="BaseResultMap" >
    select id, star_id, file_size, name_code, high_definition, favorite, address, is_chinese,
    create_at, update_at,volume
    from movie_list where star_id = #{starId,jdbcType=BIGINT} and name_code = #{movieName,jdbcType=VARCHAR}
  </select>

  <select id="findAllByStarId" resultMap="BaseResultMap" >
    select id, star_id, file_size, name_code, high_definition, favorite, address, is_chinese,
    create_at, update_at,volume
    from movie_list where star_id = #{starId,jdbcType=BIGINT}
  </select>

  <select id="findAllByParam" resultMap="BaseResultMap" >
    select id, star_id, file_size, name_code, high_definition, favorite, address, is_chinese,
    create_at, update_at,volume
    from movie_list where
    star_id = #{starId,jdbcType=BIGINT}
    <if test="address != null and address != ''">
      and address like "%"#{address,jdbcType=VARCHAR}"%"
    </if>
    <if test="volume != null and volume != ''">
      and volume = #{volume,jdbcType=VARCHAR}
    </if>

  </select>


</mapper>