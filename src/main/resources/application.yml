server:
  port: 8092
spring:
  application:
    name: memberCenterService
# thymeleaf
  thymeleaf:
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML5
    encoding: UTF-8
    content-type: text/html
    cache: false
  mvc:   #静态文件
    static-path-pattern: /static/**
      #  serverTimezone=UTC 不加会因为时区问题报错
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/wind_movie?useUnicode=true&characterEncoding=utf-8&serverTimezone=UTC
    username: root
    # password root
    password: cpaIVG3A8yKLpVcShz8IySfSUrcCRwOQZR352tv2Zmh2Efs1v8UzlUVaZx/v3nyfBPufxQnvPVlAVFIm1Kh7pQ==
    driverClassName: com.mysql.cj.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource

    druid:
      #     配置初始化大小、最小、最大
      initial-size: 5
      min-idle: 5
      maxActive: 20

      #     配置获取连接等待超时的时间
      max-wait: 60000

      #     配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      time-between-eviction-runs-millis: 60000

      #     配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 300000
      max-evictable-idle-time-millis: 900000

      #     preparedStatement缓存,如果数据库使用游标,则提升巨大,比如ORACLE ,mysql就不必了。
      #     pool-prepared-statements: true
      #     max-open-prepared-statements: 20
      validation-query: SELECT 1 FROM DUAL
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false
      keepAlive: true
      filters: stat
      connection-properties: config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAIVsH0OcbBVZ52NxckzaD9Utbt3rxLmrryLpXV+0mfb82F7cNFfY6zzfmcvEoIPnSFacsNS1SQWVJH3Z7wcFIMsCAwEAAQ==
      filter:
        config:
          enabled: true




      #  activemq:
      #    broker-url:

      #reids
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password:
    timeout: 1000

mybatis:
  type-aliases-package: com.wind.movie.entity
  config-locations: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/*.xml
# spring cloud config
#  cloud:
#    config:
#      enabled: true
# spring cloud eureka
#eureka:
#  client:
#    registerWithEureka: true
#    fetchRegistry: true
#    serviceUrl:
#      defaultZone: http://localhost:8762/eureka/